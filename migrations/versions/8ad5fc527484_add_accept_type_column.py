"""Add accept_type column

Revision ID: 8ad5fc527484
Revises: bc3cdb39b6b7
Create Date: 2016-09-07 16:19:07.917824

"""

# revision identifiers, used by Alembic.
revision = '8ad5fc527484'
down_revision = 'bc3cdb39b6b7'

from alembic import op
import sqlalchemy as sa
import sqlalchemy_enum34, sqlalchemy_utils.types.uuid
from ode.blueprints.isi.model import AcceptType, AcceptState


def upgrade():
	### commands auto generated by Alembic - please adjust! ###

	# We need to override a little bit here: https://bitbucket.org/zzzeek/sqlalchemy/issues/3584/columncopy-and-typedecorator-bug-in-11
	#  :)
	class MyEnum(sqlalchemy_enum34.Enum):
		def copy(self, *args, **kwargs):
			return super(MyEnum, self).copy()

	with op.batch_alter_table('recipient', schema=None) as batch_op:
		batch_op.add_column(
			sa.Column('accept_type', 
				MyEnum(AcceptType, name="accept_type"), 
				nullable=True
			)
		)
	connection = op.get_bind()
	connection.execute('UPDATE recipient SET accept_type = :accept_type WHERE accept_time IS NOT NULL', accept_type=AcceptType.LINK.value)
	connection.execute('UPDATE recipient SET accept_type = :accept_type WHERE accept_time IS NULL AND accept != :unknown_state', 
		unknown_state=AcceptState.UNKNOWN.value,
		accept_type=AcceptType.MANUAL.value)
	### end Alembic commands ###


def downgrade():
	### commands auto generated by Alembic - please adjust! ###
	with op.batch_alter_table('recipient', schema=None) as batch_op:
		batch_op.drop_column('accept_type')
	### end Alembic commands ###
